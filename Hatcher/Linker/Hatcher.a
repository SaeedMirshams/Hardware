;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.05.3 Standard
;Automatic Program Generator
;© Copyright 1998-2011 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project : Hatcher
;Version : 1.0
;Date    : 2017/1/25
;Author  : Saeed
;Company : Mirshams
;Comments:
;For Hatching
;
;
;Chip type               : ATmega8
;Program type            : Application
;AVR Core Clock frequency: 8.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 256
;*****************************************************/
;
;#include <mega8.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <stdio.h>
;#include <stdlib.h>
;
;#include <delay.h>
;
;// Alphanumeric LCD functions
;#include <alcd.h>
;
;#define STATE_NORMAL 0
;#define STATE_MENU   1
;
;#define STATE_CLOCK  10
;#define STATE_MATEMP 20
;#define STATE_MITEMP 30
;#define STATE_ROTATT 40
;#define STATE_ROTATP 50
;#define STATE_SYCHK  60
;#define STATE_ATEMP1 70
;#define STATE_ATEMP2 80
;
;#define OK 1
;#define CANCEL 2
;#define UP 4
;#define DOWN 8
;
;
;typedef unsigned char byte;
;/*
;
;// table for the user defined character
;// arrow that points to the top right corner
;flash byte char_table[]={
;0b10000000,
;0b10000000,
;0b10000000,
;0b10000000,
;0b10000000,
;0b10010101,
;0b10111111,
;0b10000000
;};
;// function used to define user characters
;void define_char(byte flash *pc,byte char_code)
;{
;byte i,address;
;address=(char_code<<3)|0x40;
;for (i=0; i<8; i++) lcd_write_byte(address++,*pc++);
;}
;*/
;#define OFF   0
;#define LEFT  1
;#define RIGHT 2
;
;#define ON 1
;
;int tick;
;long int clock=0;
;int currentTemperature;
;byte lastdirection=OFF;
;byte heaterstate=OFF;
;
;eeprom int temp1;
;eeprom int temp1analog;
;eeprom int temp2;
;eeprom int temp2analog;
;eeprom int Mintemp=0;
;eeprom int Maxtemp=1;
;eeprom long int rotTime=30;//15*60;
;eeprom long int rotperiod=60;//3600;
;flash char *MenuItems[]={
;"Clock",
;"Max Temperature",
;"Min Temperature",
;"Rotation Time",
;"Rotation Period",
;"System Check",
;"adj Temp.1",
;"adj Temp.2",
;};

	.DSEG
;
;
;void translateTime(long int clock,char* timstr)
; 0000 006C {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 006D int day,hour,minut,second;
; 0000 006E long int tim=clock;
; 0000 006F second=tim%60;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;	clock -> Y+14
;	*timstr -> Y+12
;	day -> R16,R17
;	hour -> R18,R19
;	minut -> R20,R21
;	second -> Y+10
;	tim -> Y+6
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0070   tim=tim/60;
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 0071   minut=tim%60;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 0072   tim=tim/60;
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 0073   hour=tim%24;
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0074   tim=tim/24;
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 0075   day=tim;
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 0076  sprintf(timstr,"%2d %2d:%2d:%2d ",day,hour,minut,second);
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 0077 }
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;
;void translateTemp(int temp,char* str)
; 0000 007A {
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 007B float degtemp= (float)(temp- temp1analog)*(temp2-temp1)/(float)(temp2analog-temp1analog)-temp1;
; 0000 007C 
; 0000 007D ftoa(degtemp,2,str);
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;	temp -> Y+6
;	*str -> Y+4
;	degtemp -> Y+0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
; 0000 007E 
; 0000 007F }
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;
;void clearLine(byte i)
; 0000 0082 {
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
; 0000 0083 lcd_gotoxy(0,i);
;PCODE: $0000007C VOL: 0
;	i -> Y+0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
; 0000 0084 lcd_putsf("                ");
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0000 0085 lcd_gotoxy(0,i);
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
; 0000 0086 }
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;
;
;void showNormalLine1()
; 0000 008A {
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0000 008B char timstr[]="99 24:60:60";
; 0000 008C translateTime(clock,timstr);
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;	timstr -> Y+0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
; 0000 008D lcd_gotoxy(0,0);
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
; 0000 008E lcd_puts(timstr);
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
; 0000 008F 
; 0000 0090 translateTemp(currentTemperature,timstr);
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
; 0000 0091 lcd_puts(timstr);
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0000 0092 lcd_puts(" C");
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
; 0000 0093 lcd_gotoxy(0,1);
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
; 0000 0094 
; 0000 0095 }
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0

	.DSEG
_0x5:
	.BYTE 0x3
;
;
;void showNormalLine2()
; 0000 0099 {

	.CSEG
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0000 009A clearLine(1);
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
; 0000 009B switch(lastdirection)
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
; 0000 009C {
; 0000 009D  case OFF:
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
; 0000 009E   lcd_puts("R:OFF ");
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
; 0000 009F   break;
;PCODE: $000000B6 VOL: 0
; 0000 00A0  case LEFT:
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
; 0000 00A1   lcd_puts("R:LEF ");
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
; 0000 00A2   break;
;PCODE: $000000BD VOL: 0
; 0000 00A3  case RIGHT:
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
; 0000 00A4   lcd_puts("R:RIG ");
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
; 0000 00A5   break;
;PCODE: $000000C4 VOL: 0
; 0000 00A6 }
;PCODE: $000000C5 VOL: 0
; 0000 00A7 
; 0000 00A8 switch(heaterstate)
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
; 0000 00A9 {
; 0000 00AA  case OFF:
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
; 0000 00AB   lcd_puts("H:OF ");
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
; 0000 00AC   break;
;PCODE: $000000CD VOL: 0
; 0000 00AD  case ON:
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
; 0000 00AE   lcd_puts("H:ON ");
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
; 0000 00AF   break;
;PCODE: $000000D4 VOL: 0
; 0000 00B0 }
;PCODE: $000000D5 VOL: 0
; 0000 00B1 
; 0000 00B2 
; 0000 00B3 }
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0

	.DSEG
_0xA:
	.BYTE 0x21
;
;
;// Timer 0 overflow interrupt service routine
;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
; 0000 00B8 {

	.CSEG
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
; 0000 00B9  tick++;
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
; 0000 00BA  if(tick>18)
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
; 0000 00BB  {
; 0000 00BC    tick-=18;
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
; 0000 00BD    clock++;
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
; 0000 00BE  }
; 0000 00BF  TCNT0=0x27;
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
; 0000 00C0 }
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;
;
;
;#define ADC_VREF_TYPE 0x40
;
;#define	LCD_CONTROL	0x08
;#define	LCD_DISPLAY	0x04
;#define	LCD_CURSOR	0x02
;#define	LCD_BLINK	0x01
;
;#define	LCD_CURSOR_ON	(LCD_CONTROL | LCD_DISPLAY | LCD_CURSOR | LCD_BLINK)
;#define	LCD_CURSOR_OFF	(LCD_CONTROL | LCD_DISPLAY)
;
;// Read the AD conversion result
;unsigned int read_adc(unsigned char adc_input)
; 0000 00D0 {
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
; 0000 00D1 ADMUX=adc_input | (ADC_VREF_TYPE & 0xff);
;PCODE: $000000EF VOL: 0
;	adc_input -> Y+0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
; 0000 00D2 // Delay needed for the stabilization of the ADC input voltage
; 0000 00D3 delay_us(10);
;PCODE: $000000F3 VOL: 0
; 0000 00D4 // Start the AD conversion
; 0000 00D5 ADCSRA|=0x40;
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
; 0000 00D6 // Wait for the AD conversion to complete
; 0000 00D7 while ((ADCSRA & 0x10)==0);
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
; 0000 00D8 ADCSRA|=0x10;
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
; 0000 00D9 return ADCW;
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
; 0000 00DA }
;PCODE: $00000101 VOL: 0
;
;
;// Declare your global variables here
;
;
;int lastkey=15;
;byte readkey()
; 0000 00E2 {
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
; 0000 00E3 byte result=0;
; 0000 00E4 byte newkey = ~(PINC>>3)&0b00001111;
; 0000 00E5 if(newkey==lastkey)
;PCODE: $00000104 VOL: 0
;	result -> R17
;	newkey -> R16
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
; 0000 00E6 {
; 0000 00E7  result=0;
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
; 0000 00E8 }
; 0000 00E9 else
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
; 0000 00EA {
; 0000 00EB  result=newkey;
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
; 0000 00EC }
;PCODE: $00000118 VOL: 0
; 0000 00ED lastkey=newkey;
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
; 0000 00EE return result;
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
; 0000 00EF }
;PCODE: $0000011F VOL: 0
;
;
;void Heater(byte state)
; 0000 00F3 {
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
; 0000 00F4  heaterstate=state;
;PCODE: $00000122 VOL: 0
;	state -> Y+0
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
; 0000 00F5  PORTD.1=state;
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
; 0000 00F6 }
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;
;
;
;flash long int clockratios[]={24*3600,3600,60,1};
;
;
;void turn(byte direction)
; 0000 00FE {
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
; 0000 00FF  if(lastdirection!=direction)
;PCODE: $00000134 VOL: 0
;	direction -> Y+0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
; 0000 0100   {
; 0000 0101     PORTD.2=0;
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
; 0000 0102     PORTD.3=0;
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
; 0000 0103     delay_ms(1000);
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
; 0000 0104   }
; 0000 0105 
; 0000 0106 switch(direction)
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
; 0000 0107 {
; 0000 0108  case OFF:
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
; 0000 0109     PORTD.2=0;
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
; 0000 010A     PORTD.3=0;
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
; 0000 010B  break;
;PCODE: $00000147 VOL: 0
; 0000 010C  case LEFT:
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
; 0000 010D     PORTD.2=1;
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
; 0000 010E     PORTD.3=0;
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
; 0000 010F  break;
;PCODE: $0000014F VOL: 0
; 0000 0110  case RIGHT:
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
; 0000 0111     PORTD.2=0;
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
; 0000 0112     PORTD.3=1;
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
; 0000 0113  break;
;PCODE: $00000157 VOL: 0
; 0000 0114 }
;PCODE: $00000158 VOL: 0
; 0000 0115 lastdirection=direction;
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
; 0000 0116 
; 0000 0117 }
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
;
;void main(void)
; 0000 011A {
;PCODE: $0000015E VOL: 0
; 0000 011B int state=STATE_NORMAL;
; 0000 011C 
; 0000 011D temp1=0;
;	state -> R16,R17
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
; 0000 011E temp1analog=0;
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
; 0000 011F temp2=500;
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
; 0000 0120 temp2analog=1024;
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
; 0000 0121 Mintemp=73;
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
; 0000 0122 Maxtemp=75;
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
; 0000 0123 rotTime=30;//15*60;
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
; 0000 0124 rotperiod=60;//3600;
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
; 0000 0125 
; 0000 0126 
; 0000 0127 
; 0000 0128 // Input/Output Ports initialization
; 0000 0129 // Port B initialization
; 0000 012A // Func7=Out Func6=Out Func5=Out Func4=Out Func3=In Func2=Out Func1=Out Func0=Out
; 0000 012B // State7=0 State6=0 State5=0 State4=0 State3=T State2=0 State1=0 State0=0
; 0000 012C PORTB=0x00;
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
; 0000 012D DDRB=0xF7;
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
; 0000 012E 
; 0000 012F // Port C initialization
; 0000 0130 // Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0131 // State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0132 PORTC=(1 << 6) | (1 << 5) | (1 << 4) | (1 << 3);
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
; 0000 0133 DDRC=0x00;
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
; 0000 0134 
; 0000 0135 // Port D initialization
; 0000 0136 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0137 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0138 PORTD=0x00;
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
; 0000 0139 DDRD=0xFF;
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
; 0000 013A 
; 0000 013B // Timer/Counter 0 initialization
; 0000 013C // Clock source: System Clock
; 0000 013D // Clock value: 3.906 kHz
; 0000 013E TCCR0=0x05;
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
; 0000 013F TCNT0=0x27;
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
; 0000 0140 
; 0000 0141 // Timer/Counter 1 initialization
; 0000 0142 // Clock source: System Clock
; 0000 0143 // Clock value: Timer1 Stopped
; 0000 0144 // Mode: Normal top=0xFFFF
; 0000 0145 // OC1A output: Discon.
; 0000 0146 // OC1B output: Discon.
; 0000 0147 // Noise Canceler: Off
; 0000 0148 // Input Capture on Falling Edge
; 0000 0149 // Timer1 Overflow Interrupt: Off
; 0000 014A // Input Capture Interrupt: Off
; 0000 014B // Compare A Match Interrupt: Off
; 0000 014C // Compare B Match Interrupt: Off
; 0000 014D TCCR1A=0x00;
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
; 0000 014E TCCR1B=0x00;
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
; 0000 014F TCNT1H=0x00;
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
; 0000 0150 TCNT1L=0x00;
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
; 0000 0151 ICR1H=0x00;
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
; 0000 0152 ICR1L=0x00;
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
; 0000 0153 OCR1AH=0x00;
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
; 0000 0154 OCR1AL=0x00;
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
; 0000 0155 OCR1BH=0x00;
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
; 0000 0156 OCR1BL=0x00;
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
; 0000 0157 
; 0000 0158 // Timer/Counter 2 initialization
; 0000 0159 // Clock source: System Clock
; 0000 015A // Clock value: Timer2 Stopped
; 0000 015B // Mode: Normal top=0xFF
; 0000 015C // OC2 output: Disconnected
; 0000 015D ASSR=0x00;
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
; 0000 015E TCCR2=0x00;
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
; 0000 015F TCNT2=0x00;
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
; 0000 0160 OCR2=0x00;
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
; 0000 0161 
; 0000 0162 // External Interrupt(s) initialization
; 0000 0163 // INT0: Off
; 0000 0164 // INT1: Off
; 0000 0165 MCUCR=0x00;
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
; 0000 0166 
; 0000 0167 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0168 TIMSK=0x01;
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
; 0000 0169 
; 0000 016A // USART initialization
; 0000 016B // USART disabled
; 0000 016C UCSRB=0x00;
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
; 0000 016D 
; 0000 016E // Analog Comparator initialization
; 0000 016F // Analog Comparator: Off
; 0000 0170 // Analog Comparator Input Capture by Timer/Counter 1: Off
; 0000 0171 ACSR=0x80;
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
; 0000 0172 SFIOR=0x00;
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
; 0000 0173 
; 0000 0174 // ADC initialization
; 0000 0175 // ADC Clock frequency: 1000.000 kHz
; 0000 0176 // ADC Voltage Reference: AVCC pin
; 0000 0177 ADMUX=ADC_VREF_TYPE & 0xff;
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
; 0000 0178 ADCSRA=0x82;
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
; 0000 0179 
; 0000 017A // SPI initialization
; 0000 017B // SPI disabled
; 0000 017C SPCR=0x00;
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
; 0000 017D 
; 0000 017E // TWI initialization
; 0000 017F // TWI disabled
; 0000 0180 TWCR=0x00;
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
; 0000 0181 
; 0000 0182 // Alphanumeric LCD initialization
; 0000 0183 // Connections are specified in the
; 0000 0184 // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0000 0185 // RS - PORTB Bit 0
; 0000 0186 // RD - PORTB Bit 1
; 0000 0187 // EN - PORTB Bit 2
; 0000 0188 // D4 - PORTB Bit 4
; 0000 0189 // D5 - PORTB Bit 5
; 0000 018A // D6 - PORTB Bit 6
; 0000 018B // D7 - PORTB Bit 7
; 0000 018C // Characters/line: 16
; 0000 018D lcd_init(16);
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
; 0000 018E // Global enable interrupts
; 0000 018F lcd_clear();
;PCODE: $000001B9 VOL: 0
; 0000 0190 
; 0000 0191 #asm("sei")
;PCODE: $000001BA VOL: 0
	sei
;PCODE: $000001BB VOL: 0
; 0000 0192  _lcd_write_data (LCD_CURSOR_OFF);
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
; 0000 0193 while (1)
;PCODE: $000001BE VOL: 0
; 0000 0194       {
; 0000 0195       byte key;
; 0000 0196       byte menuindex;
; 0000 0197       long pasang;
; 0000 0198       char str[16];
; 0000 0199 
; 0000 019A 
; 0000 019B       PORTD.0=!PORTD.0;
;PCODE: $000001BF VOL: 0
;	key -> Y+21
;	menuindex -> Y+20
;	pasang -> Y+16
;	str -> Y+0
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
; 0000 019C       currentTemperature=read_adc(0);
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
; 0000 019D       if(currentTemperature>Maxtemp)
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
; 0000 019E       {
; 0000 019F       Heater(OFF);
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
; 0000 01A0       }
; 0000 01A1       else if(currentTemperature<Mintemp)
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
; 0000 01A2       {
; 0000 01A3       Heater(ON);
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
; 0000 01A4       }
; 0000 01A5 
; 0000 01A6       if(rotperiod<=0)
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
; 0000 01A7        rotperiod=3600;
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
; 0000 01A8 
; 0000 01A9 
; 0000 01AA      {
;PCODE: $000001E5 VOL: 0
; 0000 01AB        int r= clock%rotperiod;
; 0000 01AC        int d=clock/rotperiod%2;
; 0000 01AD        if(r<rotTime)
;PCODE: $000001E6 VOL: 0
;	key -> Y+25
;	menuindex -> Y+24
;	pasang -> Y+20
;	str -> Y+4
;	r -> Y+2
;	d -> Y+0
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
;PCODE: $000001EA VOL: 0
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
; 0000 01AE        {
; 0000 01AF         if(d==0)
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
; 0000 01B0          {
; 0000 01B1           turn(RIGHT);
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
; 0000 01B2          }
; 0000 01B3          else
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
; 0000 01B4          {
; 0000 01B5            turn(LEFT);
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
; 0000 01B6          }
;PCODE: $00000201 VOL: 0
; 0000 01B7        }
; 0000 01B8        else
;PCODE: $00000202 VOL: 0
;PCODE: $00000203 VOL: 0
; 0000 01B9        {
; 0000 01BA         turn(OFF);
;PCODE: $00000204 VOL: 0
;PCODE: $00000205 VOL: 0
; 0000 01BB        }
;PCODE: $00000206 VOL: 0
; 0000 01BC       }
;PCODE: $00000207 VOL: 0
; 0000 01BD       key=readkey();
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
; 0000 01BE       switch(state)
;PCODE: $0000020A VOL: 0
; 0000 01BF       {
; 0000 01C0       case STATE_NORMAL:
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
; 0000 01C1        showNormalLine1();
;PCODE: $0000020D VOL: 0
; 0000 01C2        showNormalLine2();
;PCODE: $0000020E VOL: 0
; 0000 01C3        if(key==OK)
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
; 0000 01C4        {
; 0000 01C5        state=STATE_MENU;
;PCODE: $00000212 VOL: 0
;PCODE: $00000213 VOL: 0
; 0000 01C6        menuindex=0;
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
; 0000 01C7        }
; 0000 01C8        break;
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0
; 0000 01C9        case STATE_MENU:
;PCODE: $00000218 VOL: 0
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
; 0000 01CA         showNormalLine1();
;PCODE: $0000021B VOL: 0
; 0000 01CB         clearLine(1);
;PCODE: $0000021C VOL: 0
;PCODE: $0000021D VOL: 0
; 0000 01CC         lcd_putsf(MenuItems[menuindex]);
;PCODE: $0000021E VOL: 0
;PCODE: $0000021F VOL: 0
;PCODE: $00000220 VOL: 0
;PCODE: $00000221 VOL: 0
;PCODE: $00000222 VOL: 0
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
; 0000 01CD        switch(key)
;PCODE: $00000226 VOL: 0
;PCODE: $00000227 VOL: 0
; 0000 01CE        {
; 0000 01CF        case OK:
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 0
; 0000 01D0         state=10*(menuindex+1);
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
;PCODE: $0000022E VOL: 0
;PCODE: $0000022F VOL: 0
; 0000 01D1         menuindex=0;
;PCODE: $00000230 VOL: 0
;PCODE: $00000231 VOL: 0
; 0000 01D2         pasang=0;
;PCODE: $00000232 VOL: 0
;PCODE: $00000233 VOL: 0
; 0000 01D3         _lcd_write_data (LCD_CURSOR_ON);
;PCODE: $00000234 VOL: 0
;PCODE: $00000235 VOL: 0
; 0000 01D4         break;
;PCODE: $00000236 VOL: 0
; 0000 01D5         case CANCEL:
;PCODE: $00000237 VOL: 0
;PCODE: $00000238 VOL: 0
;PCODE: $00000239 VOL: 0
; 0000 01D6         state=STATE_NORMAL;
;PCODE: $0000023A VOL: 0
;PCODE: $0000023B VOL: 0
; 0000 01D7         _lcd_write_data (LCD_CURSOR_OFF);
;PCODE: $0000023C VOL: 0
;PCODE: $0000023D VOL: 0
; 0000 01D8         break;
;PCODE: $0000023E VOL: 0
; 0000 01D9        case UP:
;PCODE: $0000023F VOL: 0
;PCODE: $00000240 VOL: 0
;PCODE: $00000241 VOL: 0
; 0000 01DA         if(menuindex==0)
;PCODE: $00000242 VOL: 0
;PCODE: $00000243 VOL: 0
;PCODE: $00000244 VOL: 0
; 0000 01DB          menuindex=7;
;PCODE: $00000245 VOL: 0
;PCODE: $00000246 VOL: 0
; 0000 01DC         else
;PCODE: $00000247 VOL: 0
;PCODE: $00000248 VOL: 0
; 0000 01DD          menuindex--;
;PCODE: $00000249 VOL: 0
;PCODE: $0000024A VOL: 0
;PCODE: $0000024B VOL: 0
; 0000 01DE         break;
;PCODE: $0000024C VOL: 0
;PCODE: $0000024D VOL: 0
; 0000 01DF        case DOWN:
;PCODE: $0000024E VOL: 0
;PCODE: $0000024F VOL: 0
;PCODE: $00000250 VOL: 0
; 0000 01E0         menuindex++;
;PCODE: $00000251 VOL: 0
;PCODE: $00000252 VOL: 0
;PCODE: $00000253 VOL: 0
; 0000 01E1         if(menuindex>7)
;PCODE: $00000254 VOL: 0
;PCODE: $00000255 VOL: 0
;PCODE: $00000256 VOL: 0
; 0000 01E2         menuindex=0;
;PCODE: $00000257 VOL: 0
;PCODE: $00000258 VOL: 0
; 0000 01E3         break;
;PCODE: $00000259 VOL: 0
;PCODE: $0000025A VOL: 0
; 0000 01E4        }
;PCODE: $0000025B VOL: 0
; 0000 01E5        break;
;PCODE: $0000025C VOL: 0
; 0000 01E6 
; 0000 01E7        case STATE_CLOCK:
;PCODE: $0000025D VOL: 0
;PCODE: $0000025E VOL: 0
;PCODE: $0000025F VOL: 0
; 0000 01E8         showNormalLine1();
;PCODE: $00000260 VOL: 0
; 0000 01E9         clearLine(1);
;PCODE: $00000261 VOL: 0
;PCODE: $00000262 VOL: 0
; 0000 01EA         translateTime(clock+pasang,str);
;PCODE: $00000263 VOL: 0
;PCODE: $00000264 VOL: 0
;PCODE: $00000265 VOL: 0
;PCODE: $00000266 VOL: 0
;PCODE: $00000267 VOL: 0
;PCODE: $00000268 VOL: 0
; 0000 01EB         lcd_puts(str);
;PCODE: $00000269 VOL: 0
;PCODE: $0000026A VOL: 0
; 0000 01EC         lcd_gotoxy(menuindex*3+1,1);
;PCODE: $0000026B VOL: 0
;PCODE: $0000026C VOL: 0
;PCODE: $0000026D VOL: 0
;PCODE: $0000026E VOL: 0
;PCODE: $0000026F VOL: 0
;PCODE: $00000270 VOL: 0
;PCODE: $00000271 VOL: 0
; 0000 01ED        switch(key)
;PCODE: $00000272 VOL: 0
;PCODE: $00000273 VOL: 0
; 0000 01EE        {
; 0000 01EF        case OK:
;PCODE: $00000274 VOL: 0
;PCODE: $00000275 VOL: 0
; 0000 01F0         menuindex++;
;PCODE: $00000276 VOL: 0
;PCODE: $00000277 VOL: 0
;PCODE: $00000278 VOL: 0
; 0000 01F1         if(menuindex>3)
;PCODE: $00000279 VOL: 0
;PCODE: $0000027A VOL: 0
;PCODE: $0000027B VOL: 0
; 0000 01F2         menuindex=0;
;PCODE: $0000027C VOL: 0
;PCODE: $0000027D VOL: 0
; 0000 01F3         clock+=pasang;
;PCODE: $0000027E VOL: 0
;PCODE: $0000027F VOL: 0
;PCODE: $00000280 VOL: 0
;PCODE: $00000281 VOL: 0
;PCODE: $00000282 VOL: 0
; 0000 01F4         pasang=0;
;PCODE: $00000283 VOL: 0
;PCODE: $00000284 VOL: 0
; 0000 01F5         break;
;PCODE: $00000285 VOL: 0
; 0000 01F6         case CANCEL:
;PCODE: $00000286 VOL: 0
;PCODE: $00000287 VOL: 0
;PCODE: $00000288 VOL: 0
; 0000 01F7         menuindex=0;
;PCODE: $00000289 VOL: 0
;PCODE: $0000028A VOL: 0
; 0000 01F8         state=STATE_MENU;
;PCODE: $0000028B VOL: 0
;PCODE: $0000028C VOL: 0
; 0000 01F9        _lcd_write_data (LCD_CURSOR_OFF);
;PCODE: $0000028D VOL: 0
;PCODE: $0000028E VOL: 0
; 0000 01FA         break;
;PCODE: $0000028F VOL: 0
; 0000 01FB        case UP:
;PCODE: $00000290 VOL: 0
;PCODE: $00000291 VOL: 0
;PCODE: $00000292 VOL: 0
; 0000 01FC         pasang+=clockratios[menuindex];
;PCODE: $00000293 VOL: 0
;PCODE: $00000294 VOL: 0
;PCODE: $00000295 VOL: 0
;PCODE: $00000296 VOL: 0
;PCODE: $00000297 VOL: 0
;PCODE: $00000298 VOL: 0
;PCODE: $00000299 VOL: 0
;PCODE: $0000029A VOL: 0
;PCODE: $0000029B VOL: 0
; 0000 01FD         break;
;PCODE: $0000029C VOL: 0
; 0000 01FE        case DOWN:
;PCODE: $0000029D VOL: 0
;PCODE: $0000029E VOL: 0
;PCODE: $0000029F VOL: 0
; 0000 01FF         pasang-=clockratios[menuindex];
;PCODE: $000002A0 VOL: 0
;PCODE: $000002A1 VOL: 0
;PCODE: $000002A2 VOL: 0
;PCODE: $000002A3 VOL: 0
;PCODE: $000002A4 VOL: 0
;PCODE: $000002A5 VOL: 0
;PCODE: $000002A6 VOL: 0
;PCODE: $000002A7 VOL: 0
;PCODE: $000002A8 VOL: 0
; 0000 0200         break;
;PCODE: $000002A9 VOL: 0
; 0000 0201        }
;PCODE: $000002AA VOL: 0
; 0000 0202 
; 0000 0203        break;
;PCODE: $000002AB VOL: 0
; 0000 0204        case STATE_MATEMP:
;PCODE: $000002AC VOL: 0
;PCODE: $000002AD VOL: 0
;PCODE: $000002AE VOL: 0
; 0000 0205         showNormalLine1();
;PCODE: $000002AF VOL: 0
; 0000 0206         clearLine(1);
;PCODE: $000002B0 VOL: 0
;PCODE: $000002B1 VOL: 0
; 0000 0207         translateTemp(Maxtemp+pasang,str);
;PCODE: $000002B2 VOL: 0
;PCODE: $000002B3 VOL: 0
;PCODE: $000002B4 VOL: 0
;PCODE: $000002B5 VOL: 0
;PCODE: $000002B6 VOL: 0
;PCODE: $000002B7 VOL: 0
;PCODE: $000002B8 VOL: 0
; 0000 0208         lcd_puts(str);
;PCODE: $000002B9 VOL: 0
;PCODE: $000002BA VOL: 0
; 0000 0209        switch(key)
;PCODE: $000002BB VOL: 0
;PCODE: $000002BC VOL: 0
; 0000 020A        {
; 0000 020B        case OK:
;PCODE: $000002BD VOL: 0
;PCODE: $000002BE VOL: 0
; 0000 020C        if(pasang!=0)
;PCODE: $000002BF VOL: 0
;PCODE: $000002C0 VOL: 0
;PCODE: $000002C1 VOL: 0
; 0000 020D        {
; 0000 020E         Maxtemp+=pasang;
;PCODE: $000002C2 VOL: 0
;PCODE: $000002C3 VOL: 0
;PCODE: $000002C4 VOL: 0
;PCODE: $000002C5 VOL: 0
;PCODE: $000002C6 VOL: 0
;PCODE: $000002C7 VOL: 0
; 0000 020F        }
; 0000 0210        case CANCEL:
;PCODE: $000002C8 VOL: 0
;PCODE: $000002C9 VOL: 0
;PCODE: $000002CA VOL: 0
;PCODE: $000002CB VOL: 0
;PCODE: $000002CC VOL: 0
;PCODE: $000002CD VOL: 0
; 0000 0211         state=STATE_MENU;
;PCODE: $000002CE VOL: 0
;PCODE: $000002CF VOL: 0
; 0000 0212         menuindex=STATE_MATEMP/10-1;
;PCODE: $000002D0 VOL: 0
;PCODE: $000002D1 VOL: 0
; 0000 0213         _lcd_write_data (LCD_CURSOR_OFF);
;PCODE: $000002D2 VOL: 0
;PCODE: $000002D3 VOL: 0
; 0000 0214         break;
;PCODE: $000002D4 VOL: 0
; 0000 0215        case UP:
;PCODE: $000002D5 VOL: 0
;PCODE: $000002D6 VOL: 0
;PCODE: $000002D7 VOL: 0
; 0000 0216         pasang++;
;PCODE: $000002D8 VOL: 0
;PCODE: $000002D9 VOL: 0
;PCODE: $000002DA VOL: 0
; 0000 0217         break;
;PCODE: $000002DB VOL: 0
; 0000 0218        case DOWN:
;PCODE: $000002DC VOL: 0
;PCODE: $000002DD VOL: 0
;PCODE: $000002DE VOL: 0
; 0000 0219         pasang--;
;PCODE: $000002DF VOL: 0
;PCODE: $000002E0 VOL: 0
;PCODE: $000002E1 VOL: 0
; 0000 021A         break;
;PCODE: $000002E2 VOL: 0
; 0000 021B        }
;PCODE: $000002E3 VOL: 0
; 0000 021C 
; 0000 021D        break;
;PCODE: $000002E4 VOL: 0
; 0000 021E 
; 0000 021F        case STATE_MITEMP:
;PCODE: $000002E5 VOL: 0
;PCODE: $000002E6 VOL: 0
;PCODE: $000002E7 VOL: 0
; 0000 0220         showNormalLine1();
;PCODE: $000002E8 VOL: 0
; 0000 0221         clearLine(1);
;PCODE: $000002E9 VOL: 0
;PCODE: $000002EA VOL: 0
; 0000 0222         translateTemp(Mintemp+pasang,str);
;PCODE: $000002EB VOL: 0
;PCODE: $000002EC VOL: 0
;PCODE: $000002ED VOL: 0
;PCODE: $000002EE VOL: 0
;PCODE: $000002EF VOL: 0
;PCODE: $000002F0 VOL: 0
;PCODE: $000002F1 VOL: 0
; 0000 0223         lcd_puts(str);
;PCODE: $000002F2 VOL: 0
;PCODE: $000002F3 VOL: 0
; 0000 0224        switch(key)
;PCODE: $000002F4 VOL: 0
;PCODE: $000002F5 VOL: 0
; 0000 0225        {
; 0000 0226        case OK:
;PCODE: $000002F6 VOL: 0
;PCODE: $000002F7 VOL: 0
; 0000 0227        if(pasang!=0)
;PCODE: $000002F8 VOL: 0
;PCODE: $000002F9 VOL: 0
;PCODE: $000002FA VOL: 0
; 0000 0228        {
; 0000 0229         Mintemp+=pasang;
;PCODE: $000002FB VOL: 0
;PCODE: $000002FC VOL: 0
;PCODE: $000002FD VOL: 0
;PCODE: $000002FE VOL: 0
;PCODE: $000002FF VOL: 0
;PCODE: $00000300 VOL: 0
; 0000 022A        }
; 0000 022B         pasang=0;
;PCODE: $00000301 VOL: 0
;PCODE: $00000302 VOL: 0
;PCODE: $00000303 VOL: 0
; 0000 022C         case CANCEL:
;PCODE: $00000304 VOL: 0
;PCODE: $00000305 VOL: 0
;PCODE: $00000306 VOL: 0
;PCODE: $00000307 VOL: 0
;PCODE: $00000308 VOL: 0
; 0000 022D         state=STATE_MENU;
;PCODE: $00000309 VOL: 0
;PCODE: $0000030A VOL: 0
; 0000 022E         menuindex=STATE_MITEMP/10-1;
;PCODE: $0000030B VOL: 0
;PCODE: $0000030C VOL: 0
; 0000 022F         break;
;PCODE: $0000030D VOL: 0
; 0000 0230        case UP:
;PCODE: $0000030E VOL: 0
;PCODE: $0000030F VOL: 0
;PCODE: $00000310 VOL: 0
; 0000 0231         pasang++;
;PCODE: $00000311 VOL: 0
;PCODE: $00000312 VOL: 0
;PCODE: $00000313 VOL: 0
; 0000 0232         break;
;PCODE: $00000314 VOL: 0
; 0000 0233        case DOWN:
;PCODE: $00000315 VOL: 0
;PCODE: $00000316 VOL: 0
;PCODE: $00000317 VOL: 0
; 0000 0234         pasang--;
;PCODE: $00000318 VOL: 0
;PCODE: $00000319 VOL: 0
;PCODE: $0000031A VOL: 0
; 0000 0235         break;
;PCODE: $0000031B VOL: 0
; 0000 0236        }
;PCODE: $0000031C VOL: 0
; 0000 0237 
; 0000 0238        break;
;PCODE: $0000031D VOL: 0
; 0000 0239 
; 0000 023A        case STATE_ROTATT:
;PCODE: $0000031E VOL: 0
;PCODE: $0000031F VOL: 0
;PCODE: $00000320 VOL: 0
; 0000 023B         showNormalLine1();
;PCODE: $00000321 VOL: 0
; 0000 023C         clearLine(1);
;PCODE: $00000322 VOL: 0
;PCODE: $00000323 VOL: 0
; 0000 023D         translateTime(rotTime+pasang,str);
;PCODE: $00000324 VOL: 0
;PCODE: $00000325 VOL: 0
;PCODE: $00000326 VOL: 0
;PCODE: $00000327 VOL: 0
;PCODE: $00000328 VOL: 0
;PCODE: $00000329 VOL: 0
;PCODE: $0000032A VOL: 0
; 0000 023E         lcd_puts(str);
;PCODE: $0000032B VOL: 0
;PCODE: $0000032C VOL: 0
; 0000 023F         lcd_gotoxy(menuindex*3+1,1);
;PCODE: $0000032D VOL: 0
;PCODE: $0000032E VOL: 0
;PCODE: $0000032F VOL: 0
;PCODE: $00000330 VOL: 0
;PCODE: $00000331 VOL: 0
;PCODE: $00000332 VOL: 0
;PCODE: $00000333 VOL: 0
; 0000 0240        switch(key)
;PCODE: $00000334 VOL: 0
;PCODE: $00000335 VOL: 0
; 0000 0241        {
; 0000 0242        case OK:
;PCODE: $00000336 VOL: 0
;PCODE: $00000337 VOL: 0
; 0000 0243         menuindex++;
;PCODE: $00000338 VOL: 0
;PCODE: $00000339 VOL: 0
;PCODE: $0000033A VOL: 0
; 0000 0244         if(menuindex>3)
;PCODE: $0000033B VOL: 0
;PCODE: $0000033C VOL: 0
;PCODE: $0000033D VOL: 0
; 0000 0245          menuindex=0;
;PCODE: $0000033E VOL: 0
;PCODE: $0000033F VOL: 0
; 0000 0246         if(pasang!=0)
;PCODE: $00000340 VOL: 0
;PCODE: $00000341 VOL: 0
;PCODE: $00000342 VOL: 0
;PCODE: $00000343 VOL: 0
; 0000 0247          rotTime+=pasang;
;PCODE: $00000344 VOL: 0
;PCODE: $00000345 VOL: 0
;PCODE: $00000346 VOL: 0
;PCODE: $00000347 VOL: 0
;PCODE: $00000348 VOL: 0
;PCODE: $00000349 VOL: 0
; 0000 0248         pasang=0;
;PCODE: $0000034A VOL: 0
;PCODE: $0000034B VOL: 0
;PCODE: $0000034C VOL: 0
; 0000 0249         break;
;PCODE: $0000034D VOL: 0
; 0000 024A         case CANCEL:
;PCODE: $0000034E VOL: 0
;PCODE: $0000034F VOL: 0
;PCODE: $00000350 VOL: 0
; 0000 024B         menuindex=STATE_ROTATT/10-1;
;PCODE: $00000351 VOL: 0
;PCODE: $00000352 VOL: 0
; 0000 024C         state=STATE_MENU;
;PCODE: $00000353 VOL: 0
;PCODE: $00000354 VOL: 0
; 0000 024D         break;
;PCODE: $00000355 VOL: 0
; 0000 024E        case UP:
;PCODE: $00000356 VOL: 0
;PCODE: $00000357 VOL: 0
;PCODE: $00000358 VOL: 0
; 0000 024F         pasang+=clockratios[menuindex];
;PCODE: $00000359 VOL: 0
;PCODE: $0000035A VOL: 0
;PCODE: $0000035B VOL: 0
;PCODE: $0000035C VOL: 0
;PCODE: $0000035D VOL: 0
;PCODE: $0000035E VOL: 0
;PCODE: $0000035F VOL: 0
;PCODE: $00000360 VOL: 0
;PCODE: $00000361 VOL: 0
; 0000 0250         break;
;PCODE: $00000362 VOL: 0
; 0000 0251        case DOWN:
;PCODE: $00000363 VOL: 0
;PCODE: $00000364 VOL: 0
;PCODE: $00000365 VOL: 0
; 0000 0252         pasang-=clockratios[menuindex];
;PCODE: $00000366 VOL: 0
;PCODE: $00000367 VOL: 0
;PCODE: $00000368 VOL: 0
;PCODE: $00000369 VOL: 0
;PCODE: $0000036A VOL: 0
;PCODE: $0000036B VOL: 0
;PCODE: $0000036C VOL: 0
;PCODE: $0000036D VOL: 0
;PCODE: $0000036E VOL: 0
; 0000 0253         break;
;PCODE: $0000036F VOL: 0
; 0000 0254        }
;PCODE: $00000370 VOL: 0
; 0000 0255        break;
;PCODE: $00000371 VOL: 0
; 0000 0256        case STATE_ROTATP:
;PCODE: $00000372 VOL: 0
;PCODE: $00000373 VOL: 0
;PCODE: $00000374 VOL: 0
; 0000 0257         showNormalLine1();
;PCODE: $00000375 VOL: 0
; 0000 0258         clearLine(1);
;PCODE: $00000376 VOL: 0
;PCODE: $00000377 VOL: 0
; 0000 0259         translateTime(rotperiod+pasang,str);
;PCODE: $00000378 VOL: 0
;PCODE: $00000379 VOL: 0
;PCODE: $0000037A VOL: 0
;PCODE: $0000037B VOL: 0
;PCODE: $0000037C VOL: 0
;PCODE: $0000037D VOL: 0
;PCODE: $0000037E VOL: 0
; 0000 025A         lcd_puts(str);
;PCODE: $0000037F VOL: 0
;PCODE: $00000380 VOL: 0
; 0000 025B         lcd_gotoxy(menuindex*3+1,1);
;PCODE: $00000381 VOL: 0
;PCODE: $00000382 VOL: 0
;PCODE: $00000383 VOL: 0
;PCODE: $00000384 VOL: 0
;PCODE: $00000385 VOL: 0
;PCODE: $00000386 VOL: 0
;PCODE: $00000387 VOL: 0
; 0000 025C        switch(key)
;PCODE: $00000388 VOL: 0
;PCODE: $00000389 VOL: 0
; 0000 025D        {
; 0000 025E        case OK:
;PCODE: $0000038A VOL: 0
;PCODE: $0000038B VOL: 0
; 0000 025F         menuindex++;
;PCODE: $0000038C VOL: 0
;PCODE: $0000038D VOL: 0
;PCODE: $0000038E VOL: 0
; 0000 0260         if(menuindex>3)
;PCODE: $0000038F VOL: 0
;PCODE: $00000390 VOL: 0
;PCODE: $00000391 VOL: 0
; 0000 0261          menuindex=0;
;PCODE: $00000392 VOL: 0
;PCODE: $00000393 VOL: 0
; 0000 0262         if(pasang!=0)
;PCODE: $00000394 VOL: 0
;PCODE: $00000395 VOL: 0
;PCODE: $00000396 VOL: 0
;PCODE: $00000397 VOL: 0
; 0000 0263          rotperiod+=pasang;
;PCODE: $00000398 VOL: 0
;PCODE: $00000399 VOL: 0
;PCODE: $0000039A VOL: 0
;PCODE: $0000039B VOL: 0
;PCODE: $0000039C VOL: 0
;PCODE: $0000039D VOL: 0
; 0000 0264         pasang=0;
;PCODE: $0000039E VOL: 0
;PCODE: $0000039F VOL: 0
;PCODE: $000003A0 VOL: 0
; 0000 0265         break;
;PCODE: $000003A1 VOL: 0
; 0000 0266         case CANCEL:
;PCODE: $000003A2 VOL: 0
;PCODE: $000003A3 VOL: 0
;PCODE: $000003A4 VOL: 0
; 0000 0267         menuindex=STATE_ROTATP/10-1;
;PCODE: $000003A5 VOL: 0
;PCODE: $000003A6 VOL: 0
; 0000 0268         state=STATE_MENU;
;PCODE: $000003A7 VOL: 0
;PCODE: $000003A8 VOL: 0
; 0000 0269         break;
;PCODE: $000003A9 VOL: 0
; 0000 026A        case UP:
;PCODE: $000003AA VOL: 0
;PCODE: $000003AB VOL: 0
;PCODE: $000003AC VOL: 0
; 0000 026B         pasang+=clockratios[menuindex];
;PCODE: $000003AD VOL: 0
;PCODE: $000003AE VOL: 0
;PCODE: $000003AF VOL: 0
;PCODE: $000003B0 VOL: 0
;PCODE: $000003B1 VOL: 0
;PCODE: $000003B2 VOL: 0
;PCODE: $000003B3 VOL: 0
;PCODE: $000003B4 VOL: 0
;PCODE: $000003B5 VOL: 0
; 0000 026C         break;
;PCODE: $000003B6 VOL: 0
; 0000 026D        case DOWN:
;PCODE: $000003B7 VOL: 0
;PCODE: $000003B8 VOL: 0
;PCODE: $000003B9 VOL: 0
; 0000 026E         pasang-=clockratios[menuindex];
;PCODE: $000003BA VOL: 0
;PCODE: $000003BB VOL: 0
;PCODE: $000003BC VOL: 0
;PCODE: $000003BD VOL: 0
;PCODE: $000003BE VOL: 0
;PCODE: $000003BF VOL: 0
;PCODE: $000003C0 VOL: 0
;PCODE: $000003C1 VOL: 0
;PCODE: $000003C2 VOL: 0
; 0000 026F         break;
;PCODE: $000003C3 VOL: 0
; 0000 0270        }
;PCODE: $000003C4 VOL: 0
; 0000 0271        break;
;PCODE: $000003C5 VOL: 0
; 0000 0272 
; 0000 0273        case STATE_SYCHK:
;PCODE: $000003C6 VOL: 0
;PCODE: $000003C7 VOL: 0
;PCODE: $000003C8 VOL: 0
; 0000 0274         PORTD=0;
;PCODE: $000003C9 VOL: 0
;PCODE: $000003CA VOL: 0
; 0000 0275         clearLine(1);
;PCODE: $000003CB VOL: 0
;PCODE: $000003CC VOL: 0
; 0000 0276         clearLine(0);
;PCODE: $000003CD VOL: 0
;PCODE: $000003CE VOL: 0
; 0000 0277         lcd_puts("OK or CANCEL");
;PCODE: $000003CF VOL: 0
;PCODE: $000003D0 VOL: 0
;PCODE: $000003D1 VOL: 0
; 0000 0278        switch(key)
;PCODE: $000003D2 VOL: 0
;PCODE: $000003D3 VOL: 0
; 0000 0279        {
; 0000 027A        case OK:
;PCODE: $000003D4 VOL: 0
;PCODE: $000003D5 VOL: 0
; 0000 027B         clearLine(0);
;PCODE: $000003D6 VOL: 0
;PCODE: $000003D7 VOL: 0
; 0000 027C         lcd_puts("Heater ON");
;PCODE: $000003D8 VOL: 0
;PCODE: $000003D9 VOL: 0
;PCODE: $000003DA VOL: 0
; 0000 027D         Heater(ON);
;PCODE: $000003DB VOL: 0
;PCODE: $000003DC VOL: 0
; 0000 027E         delay_ms(10000);
;PCODE: $000003DD VOL: 0
;PCODE: $000003DE VOL: 0
; 0000 027F         clearLine(0);
;PCODE: $000003DF VOL: 0
;PCODE: $000003E0 VOL: 0
; 0000 0280         lcd_puts("Heater OFF");
;PCODE: $000003E1 VOL: 0
;PCODE: $000003E2 VOL: 0
;PCODE: $000003E3 VOL: 0
; 0000 0281         Heater(OFF);
;PCODE: $000003E4 VOL: 0
;PCODE: $000003E5 VOL: 0
; 0000 0282         delay_ms(10000);
;PCODE: $000003E6 VOL: 0
;PCODE: $000003E7 VOL: 0
; 0000 0283         clearLine(0);
;PCODE: $000003E8 VOL: 0
;PCODE: $000003E9 VOL: 0
; 0000 0284         lcd_puts("rotation Left");
;PCODE: $000003EA VOL: 0
;PCODE: $000003EB VOL: 0
;PCODE: $000003EC VOL: 0
; 0000 0285         turn(LEFT);
;PCODE: $000003ED VOL: 0
;PCODE: $000003EE VOL: 0
; 0000 0286         delay_ms(10000);
;PCODE: $000003EF VOL: 0
;PCODE: $000003F0 VOL: 0
; 0000 0287         clearLine(0);
;PCODE: $000003F1 VOL: 0
;PCODE: $000003F2 VOL: 0
; 0000 0288         lcd_puts("rotation Right");
;PCODE: $000003F3 VOL: 0
;PCODE: $000003F4 VOL: 0
;PCODE: $000003F5 VOL: 0
; 0000 0289         turn(RIGHT);
;PCODE: $000003F6 VOL: 0
;PCODE: $000003F7 VOL: 0
; 0000 028A         delay_ms(10000);
;PCODE: $000003F8 VOL: 0
;PCODE: $000003F9 VOL: 0
; 0000 028B         clearLine(0);
;PCODE: $000003FA VOL: 0
;PCODE: $000003FB VOL: 0
; 0000 028C         lcd_puts("rotation Off");
;PCODE: $000003FC VOL: 0
;PCODE: $000003FD VOL: 0
;PCODE: $000003FE VOL: 0
; 0000 028D         turn(OFF);
;PCODE: $000003FF VOL: 0
;PCODE: $00000400 VOL: 0
; 0000 028E         delay_ms(10000);
;PCODE: $00000401 VOL: 0
;PCODE: $00000402 VOL: 0
; 0000 028F 
; 0000 0290         case CANCEL:
;PCODE: $00000403 VOL: 0
;PCODE: $00000404 VOL: 0
;PCODE: $00000405 VOL: 0
;PCODE: $00000406 VOL: 0
;PCODE: $00000407 VOL: 0
; 0000 0291         menuindex=STATE_SYCHK/10-1;
;PCODE: $00000408 VOL: 0
;PCODE: $00000409 VOL: 0
; 0000 0292         state=STATE_MENU;
;PCODE: $0000040A VOL: 0
;PCODE: $0000040B VOL: 0
; 0000 0293         break;
;PCODE: $0000040C VOL: 0
; 0000 0294        case UP:
;PCODE: $0000040D VOL: 0
;PCODE: $0000040E VOL: 0
;PCODE: $0000040F VOL: 0
; 0000 0295         lcd_gotoxy(0,0);
;PCODE: $00000410 VOL: 0
;PCODE: $00000411 VOL: 0
;PCODE: $00000412 VOL: 0
;PCODE: $00000413 VOL: 0
; 0000 0296         lcd_puts("Invalid key");
;PCODE: $00000414 VOL: 0
;PCODE: $00000415 VOL: 0
;PCODE: $00000416 VOL: 0
; 0000 0297         break;
;PCODE: $00000417 VOL: 0
; 0000 0298        case DOWN:
;PCODE: $00000418 VOL: 0
;PCODE: $00000419 VOL: 0
;PCODE: $0000041A VOL: 0
; 0000 0299         lcd_gotoxy(0,0);
;PCODE: $0000041B VOL: 0
;PCODE: $0000041C VOL: 0
;PCODE: $0000041D VOL: 0
;PCODE: $0000041E VOL: 0
; 0000 029A         lcd_puts("Invalid key");
;PCODE: $0000041F VOL: 0
;PCODE: $00000420 VOL: 0
;PCODE: $00000421 VOL: 0
; 0000 029B         break;
;PCODE: $00000422 VOL: 0
; 0000 029C        }
;PCODE: $00000423 VOL: 0
; 0000 029D        break;
;PCODE: $00000424 VOL: 0
; 0000 029E 
; 0000 029F        case STATE_ATEMP1:
;PCODE: $00000425 VOL: 0
;PCODE: $00000426 VOL: 0
;PCODE: $00000427 VOL: 0
; 0000 02A0         showNormalLine1();
;PCODE: $00000428 VOL: 0
; 0000 02A1         clearLine(1);
;PCODE: $00000429 VOL: 0
;PCODE: $0000042A VOL: 0
; 0000 02A2         itoa(temp1+(menuindex==0?pasang:0),str);
;PCODE: $0000042B VOL: 0
;PCODE: $0000042C VOL: 0
;PCODE: $0000042D VOL: 0
;PCODE: $0000042E VOL: 0
;PCODE: $0000042F VOL: 0
;PCODE: $00000430 VOL: 0
;PCODE: $00000431 VOL: 0
;PCODE: $00000432 VOL: 0
;PCODE: $00000433 VOL: 0
;PCODE: $00000434 VOL: 0
;PCODE: $00000435 VOL: 0
;PCODE: $00000436 VOL: 0
;PCODE: $00000437 VOL: 0
;PCODE: $00000438 VOL: 0
;PCODE: $00000439 VOL: 0
;PCODE: $0000043A VOL: 0
;PCODE: $0000043B VOL: 0
; 0000 02A3         lcd_puts(str);
;PCODE: $0000043C VOL: 0
;PCODE: $0000043D VOL: 0
; 0000 02A4 
; 0000 02A5         lcd_gotoxy(8,1);
;PCODE: $0000043E VOL: 0
;PCODE: $0000043F VOL: 0
;PCODE: $00000440 VOL: 0
;PCODE: $00000441 VOL: 0
; 0000 02A6         itoa(temp1analog+(menuindex==1?pasang:0),str);
;PCODE: $00000442 VOL: 0
;PCODE: $00000443 VOL: 0
;PCODE: $00000444 VOL: 0
;PCODE: $00000445 VOL: 0
;PCODE: $00000446 VOL: 0
;PCODE: $00000447 VOL: 0
;PCODE: $00000448 VOL: 0
;PCODE: $00000449 VOL: 0
;PCODE: $0000044A VOL: 0
;PCODE: $0000044B VOL: 0
;PCODE: $0000044C VOL: 0
;PCODE: $0000044D VOL: 0
;PCODE: $0000044E VOL: 0
;PCODE: $0000044F VOL: 0
;PCODE: $00000450 VOL: 0
;PCODE: $00000451 VOL: 0
;PCODE: $00000452 VOL: 0
; 0000 02A7         lcd_puts(str);
;PCODE: $00000453 VOL: 0
;PCODE: $00000454 VOL: 0
; 0000 02A8         lcd_gotoxy(menuindex*8,1);
;PCODE: $00000455 VOL: 0
;PCODE: $00000456 VOL: 0
;PCODE: $00000457 VOL: 0
;PCODE: $00000458 VOL: 0
;PCODE: $00000459 VOL: 0
; 0000 02A9        switch(key)
;PCODE: $0000045A VOL: 0
;PCODE: $0000045B VOL: 0
; 0000 02AA        {
; 0000 02AB        case OK:
;PCODE: $0000045C VOL: 0
;PCODE: $0000045D VOL: 0
; 0000 02AC         if(pasang!=0)
;PCODE: $0000045E VOL: 0
;PCODE: $0000045F VOL: 0
;PCODE: $00000460 VOL: 0
; 0000 02AD         {
; 0000 02AE          if(menuindex==0)
;PCODE: $00000461 VOL: 0
;PCODE: $00000462 VOL: 0
;PCODE: $00000463 VOL: 0
; 0000 02AF           temp1 +=pasang;
;PCODE: $00000464 VOL: 0
;PCODE: $00000465 VOL: 0
;PCODE: $00000466 VOL: 0
;PCODE: $00000467 VOL: 0
;PCODE: $00000468 VOL: 0
;PCODE: $00000469 VOL: 0
; 0000 02B0          else
;PCODE: $0000046A VOL: 0
;PCODE: $0000046B VOL: 0
; 0000 02B1           temp1analog +=pasang;
;PCODE: $0000046C VOL: 0
;PCODE: $0000046D VOL: 0
;PCODE: $0000046E VOL: 0
;PCODE: $0000046F VOL: 0
;PCODE: $00000470 VOL: 0
;PCODE: $00000471 VOL: 0
; 0000 02B2         }
;PCODE: $00000472 VOL: 0
; 0000 02B3         menuindex++;
;PCODE: $00000473 VOL: 0
;PCODE: $00000474 VOL: 0
;PCODE: $00000475 VOL: 0
;PCODE: $00000476 VOL: 0
; 0000 02B4         if(menuindex>1)
;PCODE: $00000477 VOL: 0
;PCODE: $00000478 VOL: 0
;PCODE: $00000479 VOL: 0
; 0000 02B5          menuindex=0;
;PCODE: $0000047A VOL: 0
;PCODE: $0000047B VOL: 0
; 0000 02B6         pasang=0;
;PCODE: $0000047C VOL: 0
;PCODE: $0000047D VOL: 0
;PCODE: $0000047E VOL: 0
; 0000 02B7         break;
;PCODE: $0000047F VOL: 0
; 0000 02B8         case CANCEL:
;PCODE: $00000480 VOL: 0
;PCODE: $00000481 VOL: 0
;PCODE: $00000482 VOL: 0
; 0000 02B9         menuindex=STATE_ATEMP1/10-1;
;PCODE: $00000483 VOL: 0
;PCODE: $00000484 VOL: 0
; 0000 02BA         state=STATE_MENU;
;PCODE: $00000485 VOL: 0
;PCODE: $00000486 VOL: 0
; 0000 02BB         break;
;PCODE: $00000487 VOL: 0
; 0000 02BC        case UP:
;PCODE: $00000488 VOL: 0
;PCODE: $00000489 VOL: 0
;PCODE: $0000048A VOL: 0
; 0000 02BD         pasang++;
;PCODE: $0000048B VOL: 0
;PCODE: $0000048C VOL: 0
;PCODE: $0000048D VOL: 0
; 0000 02BE         break;
;PCODE: $0000048E VOL: 0
; 0000 02BF        case DOWN:
;PCODE: $0000048F VOL: 0
;PCODE: $00000490 VOL: 0
;PCODE: $00000491 VOL: 0
; 0000 02C0         pasang--;
;PCODE: $00000492 VOL: 0
;PCODE: $00000493 VOL: 0
;PCODE: $00000494 VOL: 0
; 0000 02C1         break;
;PCODE: $00000495 VOL: 0
; 0000 02C2        }
;PCODE: $00000496 VOL: 0
; 0000 02C3        break;
;PCODE: $00000497 VOL: 0
; 0000 02C4        case STATE_ATEMP2:
;PCODE: $00000498 VOL: 0
;PCODE: $00000499 VOL: 0
;PCODE: $0000049A VOL: 0
; 0000 02C5         showNormalLine1();
;PCODE: $0000049B VOL: 0
; 0000 02C6         clearLine(1);
;PCODE: $0000049C VOL: 0
;PCODE: $0000049D VOL: 0
; 0000 02C7         itoa(temp2+(menuindex==0?pasang:0),str);
;PCODE: $0000049E VOL: 0
;PCODE: $0000049F VOL: 0
;PCODE: $000004A0 VOL: 0
;PCODE: $000004A1 VOL: 0
;PCODE: $000004A2 VOL: 0
;PCODE: $000004A3 VOL: 0
;PCODE: $000004A4 VOL: 0
;PCODE: $000004A5 VOL: 0
;PCODE: $000004A6 VOL: 0
;PCODE: $000004A7 VOL: 0
;PCODE: $000004A8 VOL: 0
;PCODE: $000004A9 VOL: 0
;PCODE: $000004AA VOL: 0
;PCODE: $000004AB VOL: 0
;PCODE: $000004AC VOL: 0
;PCODE: $000004AD VOL: 0
;PCODE: $000004AE VOL: 0
; 0000 02C8         lcd_puts(str);
;PCODE: $000004AF VOL: 0
;PCODE: $000004B0 VOL: 0
; 0000 02C9 
; 0000 02CA         lcd_gotoxy(8,1);
;PCODE: $000004B1 VOL: 0
;PCODE: $000004B2 VOL: 0
;PCODE: $000004B3 VOL: 0
;PCODE: $000004B4 VOL: 0
; 0000 02CB         itoa(temp2analog+(menuindex==1?pasang:0),str);
;PCODE: $000004B5 VOL: 0
;PCODE: $000004B6 VOL: 0
;PCODE: $000004B7 VOL: 0
;PCODE: $000004B8 VOL: 0
;PCODE: $000004B9 VOL: 0
;PCODE: $000004BA VOL: 0
;PCODE: $000004BB VOL: 0
;PCODE: $000004BC VOL: 0
;PCODE: $000004BD VOL: 0
;PCODE: $000004BE VOL: 0
;PCODE: $000004BF VOL: 0
;PCODE: $000004C0 VOL: 0
;PCODE: $000004C1 VOL: 0
;PCODE: $000004C2 VOL: 0
;PCODE: $000004C3 VOL: 0
;PCODE: $000004C4 VOL: 0
;PCODE: $000004C5 VOL: 0
; 0000 02CC         lcd_puts(str);
;PCODE: $000004C6 VOL: 0
;PCODE: $000004C7 VOL: 0
; 0000 02CD         lcd_gotoxy(menuindex*8,1);
;PCODE: $000004C8 VOL: 0
;PCODE: $000004C9 VOL: 0
;PCODE: $000004CA VOL: 0
;PCODE: $000004CB VOL: 0
;PCODE: $000004CC VOL: 0
; 0000 02CE        switch(key)
;PCODE: $000004CD VOL: 0
;PCODE: $000004CE VOL: 0
; 0000 02CF        {
; 0000 02D0        case OK:
;PCODE: $000004CF VOL: 0
;PCODE: $000004D0 VOL: 0
; 0000 02D1         if(pasang!=0)
;PCODE: $000004D1 VOL: 0
;PCODE: $000004D2 VOL: 0
;PCODE: $000004D3 VOL: 0
; 0000 02D2         {
; 0000 02D3          if(menuindex==0)
;PCODE: $000004D4 VOL: 0
;PCODE: $000004D5 VOL: 0
;PCODE: $000004D6 VOL: 0
; 0000 02D4           temp2 +=pasang;
;PCODE: $000004D7 VOL: 0
;PCODE: $000004D8 VOL: 0
;PCODE: $000004D9 VOL: 0
;PCODE: $000004DA VOL: 0
;PCODE: $000004DB VOL: 0
;PCODE: $000004DC VOL: 0
; 0000 02D5          else
;PCODE: $000004DD VOL: 0
;PCODE: $000004DE VOL: 0
; 0000 02D6           temp2analog +=pasang;
;PCODE: $000004DF VOL: 0
;PCODE: $000004E0 VOL: 0
;PCODE: $000004E1 VOL: 0
;PCODE: $000004E2 VOL: 0
;PCODE: $000004E3 VOL: 0
;PCODE: $000004E4 VOL: 0
; 0000 02D7         }
;PCODE: $000004E5 VOL: 0
; 0000 02D8         menuindex++;
;PCODE: $000004E6 VOL: 0
;PCODE: $000004E7 VOL: 0
;PCODE: $000004E8 VOL: 0
;PCODE: $000004E9 VOL: 0
; 0000 02D9         if(menuindex>1)
;PCODE: $000004EA VOL: 0
;PCODE: $000004EB VOL: 0
;PCODE: $000004EC VOL: 0
; 0000 02DA          menuindex=0;
;PCODE: $000004ED VOL: 0
;PCODE: $000004EE VOL: 0
; 0000 02DB         pasang=0;
;PCODE: $000004EF VOL: 0
;PCODE: $000004F0 VOL: 0
;PCODE: $000004F1 VOL: 0
; 0000 02DC         break;
;PCODE: $000004F2 VOL: 0
; 0000 02DD         case CANCEL:
;PCODE: $000004F3 VOL: 0
;PCODE: $000004F4 VOL: 0
;PCODE: $000004F5 VOL: 0
; 0000 02DE         menuindex=STATE_ATEMP1/10-1;
;PCODE: $000004F6 VOL: 0
;PCODE: $000004F7 VOL: 0
; 0000 02DF         state=STATE_MENU;
;PCODE: $000004F8 VOL: 0
;PCODE: $000004F9 VOL: 0
; 0000 02E0         break;
;PCODE: $000004FA VOL: 0
; 0000 02E1        case UP:
;PCODE: $000004FB VOL: 0
;PCODE: $000004FC VOL: 0
;PCODE: $000004FD VOL: 0
; 0000 02E2         pasang++;
;PCODE: $000004FE VOL: 0
;PCODE: $000004FF VOL: 0
;PCODE: $00000500 VOL: 0
; 0000 02E3         break;
;PCODE: $00000501 VOL: 0
; 0000 02E4        case DOWN:
;PCODE: $00000502 VOL: 0
;PCODE: $00000503 VOL: 0
;PCODE: $00000504 VOL: 0
; 0000 02E5         pasang--;
;PCODE: $00000505 VOL: 0
;PCODE: $00000506 VOL: 0
;PCODE: $00000507 VOL: 0
; 0000 02E6         break;
;PCODE: $00000508 VOL: 0
; 0000 02E7        }
;PCODE: $00000509 VOL: 0
; 0000 02E8        break;
;PCODE: $0000050A VOL: 0
; 0000 02E9 
; 0000 02EA        default:
;PCODE: $0000050B VOL: 0
; 0000 02EB       }
;PCODE: $0000050C VOL: 0
; 0000 02EC 
; 0000 02ED       delay_ms(200);
;PCODE: $0000050D VOL: 0
;PCODE: $0000050E VOL: 0
;PCODE: $0000050F VOL: 0
; 0000 02EE       }
;PCODE: $00000510 VOL: 0
;PCODE: $00000511 VOL: 0
;PCODE: $00000512 VOL: 0
; 0000 02EF }
;PCODE: $00000513 VOL: 0
;PCODE: $00000514 VOL: 0
;PCODE: $00000515 VOL: 0

	.DSEG
_0x80:
	.BYTE 0x64
